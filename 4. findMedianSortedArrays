class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int len1 = nums1.size(), len2 = nums2.size(), half = (len1 + len2) / 2;
        int i = 0, j = 0, count = 0; // i、j分别是nums1、nums2的右段起点，同时也是左段长度。

        while (i < len1 && j < len2 && count < half) {
            if (nums1[i] <= nums2[j])
                ++i;
            else
                ++j;
            ++count;
        }
        while (count < half && i < len1) {
            ++i;
            ++count;
        }
        while (count < half && j < len2) {
            ++j;
            ++count;
        }

        int left = max(i == 0 ? INT_MIN : nums1[i - 1], j == 0 ? INT_MIN : nums2[j - 1]);
        int right = min(i == len1 ? INT_MAX : nums1[i], j == len2 ? INT_MAX : nums2[j]);

        return (len1 + len2) % 2 == 1 ? right * 1.0 : (left + right) / 2.0;
    }
};
